version: '3.9'

# ════════════════════════════════════════════════════════════════════════════════
# Development environment overrides
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
# ════════════════════════════════════════════════════════════════════════════════

services:
  # ══════════════════════════════════════════════════════════════════════════════
  # BUSINESS SERVICES - Development mode with hot reload
  # ══════════════════════════════════════════════════════════════════════════════
  template_business_api:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
      - API_RELOAD=true
    volumes:
      - ./services/template_business_api/src:/app/src:ro
    ports:
      - "8000:8000"  # Expose directly for development

  template_business_bot:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
    volumes:
      - ./services/template_business_bot/src:/app/src:ro

  template_business_worker:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
    volumes:
      - ./services/template_business_worker/src:/app/src:ro

  template_data_postgres_api:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
    volumes:
      - ./services/template_data_postgres_api/src:/app/src:ro
    ports:
      - "8001:8000"  # Expose directly for development

  template_data_mongo_api:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
    volumes:
      - ./services/template_data_mongo_api/src:/app/src:ro
    ports:
      - "8002:8000"  # Expose directly for development

  # ══════════════════════════════════════════════════════════════════════════════
  # NGINX - Optional in development
  # ══════════════════════════════════════════════════════════════════════════════
  nginx:
    profiles:
      - with-nginx  # Start with: docker-compose --profile with-nginx up

  # ══════════════════════════════════════════════════════════════════════════════
  # INFRASTRUCTURE - Expose ports for debugging
  # ══════════════════════════════════════════════════════════════════════════════
  postgres:
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust  # Development only!
    command: postgres -c log_statement=all -c log_min_duration_statement=0

  mongodb:
    command: mongod --profile 2 --slowms 100

  redis:
    command: redis-server --loglevel verbose

  # ══════════════════════════════════════════════════════════════════════════════
  # DEVELOPMENT TOOLS
  # ══════════════════════════════════════════════════════════════════════════════
  adminer:
    image: adminer:latest
    container_name: ${PROJECT_NAME:-myapp}_adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - app_network
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    container_name: ${PROJECT_NAME:-myapp}_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-admin}
    depends_on:
      - mongodb
    networks:
      - app_network
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ${PROJECT_NAME:-myapp}_redis_commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - app_network
    restart: unless-stopped
