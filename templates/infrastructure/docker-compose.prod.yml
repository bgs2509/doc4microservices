version: '3.9'

# ════════════════════════════════════════════════════════════════════════════════
# Production environment overrides
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
# ════════════════════════════════════════════════════════════════════════════════

services:
  # ══════════════════════════════════════════════════════════════════════════════
  # BUSINESS SERVICES - Production optimizations
  # ══════════════════════════════════════════════════════════════════════════════
  api_service:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - API_RELOAD=false
      - API_WORKERS=4
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  bot_service:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - BOT_WEBHOOK_MODE=true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  worker_service:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - WORKER_CONCURRENCY=8
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  db_postgres_service:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  db_mongo_service:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # ══════════════════════════════════════════════════════════════════════════════
  # NGINX - Production SSL/TLS
  # ══════════════════════════════════════════════════════════════════════════════
  nginx:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  # ══════════════════════════════════════════════════════════════════════════════
  # INFRASTRUCTURE - Production settings
  # ══════════════════════════════════════════════════════════════════════════════
  postgres:
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2048M
        reservations:
          cpus: '1.0'
          memory: 1024M
    command: >
      postgres
      -c max_connections=300
      -c shared_buffers=512MB
      -c effective_cache_size=2GB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=2GB
      -c max_wal_size=8GB
      -c max_worker_processes=4
      -c max_parallel_workers_per_gather=2
      -c max_parallel_workers=4

  mongodb:
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2048M
        reservations:
          cpus: '1.0'
          memory: 1024M
    command: mongod --wiredTigerCacheSizeGB 2.0 --auth

  redis:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
    command: redis-server --appendonly yes --maxmemory 896mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10

  rabbitmq:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M

  # ══════════════════════════════════════════════════════════════════════════════
  # OBSERVABILITY - Always enabled in production
  # ══════════════════════════════════════════════════════════════════════════════
  prometheus:
    profiles: []  # Remove profile to always start
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  grafana:
    profiles: []
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  jaeger:
    profiles: []
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
