# Domain Classifier for Business Ideas
# Classifies business domains and maps them to microservices patterns

metadata:
  name: "Business Domain Classifier"
  version: "1.0.0"
  description: "Classifies business ideas into domains and suggests service allocation"

# Domain Classification Framework
domain_categories:
  # E-commerce and Retail
  ecommerce:
    patterns: ["online store", "marketplace", "retail", "shopping", "commerce"]
    characteristics:
      - product_catalog: true
      - user_accounts: true
      - order_processing: true
      - payment_handling: true
      - inventory_management: true
    typical_services:
      postgresql_data: ["users", "products", "orders", "payments", "inventory"]
      mongodb_data: ["product_reviews", "user_behavior", "search_analytics", "recommendations"]
      api_endpoints: ["catalog", "cart", "checkout", "user_profile", "order_tracking"]
      bot_features: ["order_notifications", "support", "product_search"]
      worker_tasks: ["payment_processing", "inventory_sync", "email_notifications"]

  # Content Management
  content_management:
    patterns: ["blog", "cms", "publishing", "media", "content"]
    characteristics:
      - flexible_content_types: true
      - user_generated_content: true
      - content_versioning: true
      - media_handling: true
    typical_services:
      postgresql_data: ["users", "permissions", "content_metadata"]
      mongodb_data: ["content_documents", "media_metadata", "content_analytics"]
      api_endpoints: ["content_crud", "media_upload", "user_management"]
      bot_features: ["content_notifications", "publishing_updates"]
      worker_tasks: ["media_processing", "content_indexing", "backup_tasks"]

  # Task and Project Management
  project_management:
    patterns: ["tasks", "projects", "collaboration", "team", "workflow"]
    characteristics:
      - hierarchical_data: true
      - user_collaboration: true
      - time_tracking: true
      - notification_heavy: true
    typical_services:
      postgresql_data: ["users", "projects", "tasks", "permissions", "time_entries"]
      mongodb_data: ["activity_logs", "file_attachments", "analytics"]
      api_endpoints: ["project_crud", "task_management", "user_collaboration"]
      bot_features: ["task_reminders", "project_updates", "quick_task_creation"]
      worker_tasks: ["notification_delivery", "report_generation", "data_sync"]

  # Analytics and Reporting
  analytics:
    patterns: ["analytics", "dashboard", "reporting", "metrics", "business intelligence"]
    characteristics:
      - data_aggregation: true
      - real_time_analytics: true
      - complex_queries: true
      - visualization_heavy: true
    typical_services:
      postgresql_data: ["users", "data_sources", "report_configs"]
      mongodb_data: ["raw_analytics_data", "aggregated_metrics", "dashboard_configs"]
      api_endpoints: ["dashboard_api", "report_generation", "data_ingestion"]
      bot_features: ["report_notifications", "alert_delivery"]
      worker_tasks: ["data_processing", "metric_calculation", "report_scheduling"]

  # Communication and Social
  communication:
    patterns: ["chat", "social", "messaging", "community", "forum"]
    characteristics:
      - real_time_messaging: true
      - user_interactions: true
      - notification_heavy: true
      - social_features: true
    typical_services:
      postgresql_data: ["users", "relationships", "permissions"]
      mongodb_data: ["messages", "user_activity", "social_analytics"]
      api_endpoints: ["messaging_api", "user_management", "social_features"]
      bot_features: ["message_notifications", "community_management"]
      worker_tasks: ["message_processing", "notification_delivery", "content_moderation"]

  # Financial Services
  financial:
    patterns: ["finance", "accounting", "banking", "payments", "invoicing"]
    characteristics:
      - transaction_integrity: true
      - audit_trails: true
      - compliance_heavy: true
      - security_critical: true
    typical_services:
      postgresql_data: ["accounts", "transactions", "audit_logs", "compliance_data"]
      mongodb_data: ["transaction_analytics", "risk_metrics", "reporting_data"]
      api_endpoints: ["account_management", "transaction_processing", "reporting"]
      bot_features: ["transaction_alerts", "account_notifications"]
      worker_tasks: ["transaction_validation", "compliance_checks", "report_generation"]

  # IoT and Monitoring
  iot_monitoring:
    patterns: ["iot", "monitoring", "sensors", "telemetry", "device management"]
    characteristics:
      - high_volume_data: true
      - real_time_processing: true
      - device_management: true
      - time_series_data: true
    typical_services:
      postgresql_data: ["devices", "users", "device_configs"]
      mongodb_data: ["sensor_data", "telemetry", "analytics", "alerts"]
      api_endpoints: ["device_management", "data_ingestion", "monitoring_api"]
      bot_features: ["alert_notifications", "device_status_updates"]
      worker_tasks: ["data_processing", "alert_generation", "analytics_computation"]

  # Learning and Education
  education:
    patterns: ["learning", "education", "course", "training", "knowledge"]
    characteristics:
      - hierarchical_content: true
      - progress_tracking: true
      - user_enrollment: true
      - assessment_features: true
    typical_services:
      postgresql_data: ["users", "courses", "enrollments", "progress"]
      mongodb_data: ["course_content", "user_interactions", "learning_analytics"]
      api_endpoints: ["course_management", "user_progress", "content_delivery"]
      bot_features: ["course_reminders", "progress_updates", "learning_assistance"]
      worker_tasks: ["progress_calculation", "certificate_generation", "analytics_processing"]

# Classification Algorithm
classification_process:
  steps:
    1:
      name: "extract_keywords"
      description: "Extract key terms from business idea description"
      method: "keyword_extraction"

    2:
      name: "pattern_matching"
      description: "Match keywords against domain patterns"
      method: "fuzzy_matching"

    3:
      name: "characteristic_analysis"
      description: "Analyze business requirements against domain characteristics"
      method: "requirement_mapping"

    4:
      name: "confidence_scoring"
      description: "Calculate confidence score for each domain match"
      method: "weighted_scoring"

    5:
      name: "domain_selection"
      description: "Select primary and secondary domains"
      method: "threshold_based_selection"

# Service Allocation Rules
service_allocation_rules:
  postgresql_allocation:
    primary_use_cases:
      - "User management and authentication"
      - "Transactional data with ACID requirements"
      - "Relational data with complex joins"
      - "Financial transactions and audit trails"
      - "Permission and role management"

    decision_factors:
      - structured_data: high_priority
      - transactions_required: mandatory
      - data_consistency: critical
      - complex_relationships: beneficial

  mongodb_allocation:
    primary_use_cases:
      - "Content and document storage"
      - "Analytics and aggregation data"
      - "Flexible schema requirements"
      - "High-volume data ingestion"
      - "Real-time analytics"

    decision_factors:
      - flexible_schema: high_priority
      - analytics_heavy: beneficial
      - document_based: preferred
      - high_volume: suitable

  api_service_allocation:
    responsibilities:
      - "REST API endpoints for core business logic"
      - "External integrations and webhooks"
      - "Real-time data access and manipulation"
      - "Authentication and authorization"
      - "Business rule enforcement"

  bot_service_allocation:
    responsibilities:
      - "Telegram bot interface"
      - "User notifications and alerts"
      - "Conversational workflows"
      - "Quick actions and commands"
      - "Status updates and monitoring"

  worker_service_allocation:
    responsibilities:
      - "Background data processing"
      - "Scheduled jobs and cron tasks"
      - "Heavy computational tasks"
      - "External API integrations"
      - "Batch processing operations"

# Output Format
classification_output:
  format:
    primary_domain: "string"
    secondary_domains: ["list", "of", "strings"]
    confidence_score: "float (0.0-1.0)"
    service_allocation:
      postgresql_use_cases: ["list"]
      mongodb_use_cases: ["list"]
      api_responsibilities: ["list"]
      bot_responsibilities: ["list"]
      worker_responsibilities: ["list"]
    implementation_notes: "string"

# Example Classifications
examples:
  "Online bookstore with user reviews and recommendations":
    primary_domain: "ecommerce"
    secondary_domains: ["content_management"]
    confidence_score: 0.95
    service_allocation:
      postgresql_use_cases: ["users", "books", "orders", "payments"]
      mongodb_use_cases: ["book_reviews", "user_preferences", "recommendation_analytics"]
      api_responsibilities: ["book_catalog", "order_management", "user_authentication"]
      bot_responsibilities: ["order_notifications", "book_recommendations"]
      worker_responsibilities: ["payment_processing", "recommendation_engine", "inventory_sync"]

  "Team project management tool with time tracking":
    primary_domain: "project_management"
    secondary_domains: ["analytics"]
    confidence_score: 0.92
    service_allocation:
      postgresql_use_cases: ["users", "projects", "tasks", "time_entries"]
      mongodb_use_cases: ["activity_logs", "project_analytics", "file_attachments"]
      api_responsibilities: ["project_crud", "task_management", "time_tracking"]
      bot_responsibilities: ["task_reminders", "deadline_alerts"]
      worker_responsibilities: ["report_generation", "notification_delivery"]

  "IoT sensor data collection and monitoring":
    primary_domain: "iot_monitoring"
    secondary_domains: ["analytics"]
    confidence_score: 0.89
    service_allocation:
      postgresql_use_cases: ["devices", "users", "device_configurations"]
      mongodb_use_cases: ["sensor_readings", "telemetry_data", "alert_rules"]
      api_responsibilities: ["device_management", "data_ingestion", "monitoring_dashboard"]
      bot_responsibilities: ["critical_alerts", "device_status_updates"]
      worker_responsibilities: ["data_processing", "alert_evaluation", "analytics_computation"]